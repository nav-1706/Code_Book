/*
https://www.spoj.com/problems/MIXTURES/
*/

#include<iostream>
#include<vector>
#include<climits>
#include <string.h> 

#define ll long long int
using namespace std;

ll dp[105][105];

ll g(vector<int>&colors, int i, int j){

    /*
    This function is to get the final color of the mixuture, for example we have 'n' chemical of color x(i) i.e. = {x1, x2, x3,...xn}, the the color of final mixture obtained by mixing them will always be sum of all colors {x1 + x2 + .......xn} in matter in which manner they are added

    As the color of mixture obtained by adding any two chemical is xi + xj
    */

    ll result  = 0;

    for(int m = i; m<=j; m++){

        result = (result%100 + colors[m]%100) %100;  
    }

    return result;
}

ll f(vector<int>&colors, int i, int j){

    if(i==j) return dp[i][j] = 0;
    if(dp[i][j] != -1) return dp[i][j];

    ll result = INT_MAX;

    for(int k = i; k<j; k++){

        result = min (result, f(colors, i,k)+f(colors, k+1, j) + g(colors, i,k) * g(colors,k+1, j));

        /*
        g(color, i, k) --> It will give the color of final mixture of adding ith to kth chemical

        g(color, k+1, j) --> It will give the color of final mixture of adding (k+1)th to jth chemical

        g(color, i, k) * g(color, k+1, j) = Smoke generated by adding:
            1. final mixture after mixing ith chemical to kth chemical
            2. final mixture after mixing (k+1)th chemical to jth chemical
        */
    }

    return dp[i][j] = result;
}

int main(){

    int n;

    while(cin>>n){
        vector<int>colors(n);
        for(int i=0; i<n; i++){
            cin>>colors[i];
        }

        memset(dp,-1, sizeof(dp));

        cout<<f(colors,0,colors.size()-1)<<endl;

        colors.clear();
        
    }
}